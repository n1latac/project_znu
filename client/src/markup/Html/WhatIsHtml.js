import React from 'react';
import styles from '../style.module.css';

function WhatIsHtml() {

  return (
    <section className={styles['course-main']}>

        <h2>Початок роботи з HTML</h2>
        <p>У цій статті ми охопимо ази HTML, необхідні для початку роботи. Дамо визначення "елементам", "атрибутам", "тегам" та іншим важливим поняттям, про які ви, можливо, чули, а також про їхню роль у мові. Ми також покажемо, як влаштовані HTML-елементи, типова HTML-сторінка, і пояснимо інші важливі аспекти мови. По ходу справи, щоб ви не занудьгували, ми пограємо зі справжньою HTML-сторінкою!</p>
        <h2>Що таке HTML?</h2>
        <p>HTML (HyperText Markup Language - мова гіпертекстової розмітки) не є мовою програмування; це мова розмітки, яка використовується для визначення структури веб-сторінок, відвідуваних користувачами. Вони можуть мати складну або просту структуру, все залежить від задуму і бажання веб-розробника. HTML складається з низки елементів, які ви використовуєте для того, щоб охопити, обернути або розмітити різні частини вмісту, щоб він мав певний вигляд або спрацьовував певним способом. Вбудовані теги можуть перетворити частину вмісту на гіперпосилання, за яким можна перейти на іншу веб-сторінку, виділити курсивом слова тощо. Наприклад, розглянемо такий рядок:</p>
        <div className={styles['blockStyle']}>
        Мій кіт дуже сердитий
        </div>
        <p>Якщо ми хочемо, щоб рядок відобразився в такому ж вигляді, ми можемо визначити його як "параграф", уклавши його в теги елемента "параграф" ({`<p>`}), наприклад:</p>
        <div className={styles['blockStyle']}>
        {`<p>`}Мой кіт дуже сердитий{`</p>`}
        </div>
        <div className={styles['notes']}>
        <span className={styles.fw700}>Примітка:</span> Мітки в HTML нечутливі до регістру, тобто вони можуть бути записані у верхньому або нижньому регістрі. Наприклад, тег {`<title>`} може бути записаний як {`<title>`}, {`<TITLE>,`} {`<Title>`}, {`<TiTlE>`}, тощо, і він працюватиме нормально. Найкращою практикою, однак, є запис усіх тегів у нижньому регістрі для забезпечення узгодженості, читабельності та інших причин.
        </div>
        <h2>Структура HTML-елементів</h2>
        <p>Давайте розглянемо елемент "параграф" трохи докладніше:</p>
        <img className={styles['first-elem']} src='/img/elem.png'></img>
        <p>Основными частями элемента являются:</p>
        <ul className={styles['course-list']} style={{listStyleType: 'initial'}}>
            <li>тег, що відкриває: Він складається з назви (позначення) елемента (у нашому випадку, p), поміщеного всередині кутових дужок. Цей тег слугує ознакою початку елемента, з цього моменту тег починає впливати на наступний після нього вміст.</li>
            <li>Тег, що закриває: має такий самий вигляд, як і той, що відкриває, але містить слеш перед назвою тега. Він слугує ознакою кінця елемента. Пропуски закриваючих тегів - типова помилка новачків, яка може призводити до невизначених результатів - у кращому випадку все спрацює правильно, в інших сторінка може зовсім не промалюватися або промальовуватися не так, як очікувалося.</li>
            <li>Вміст: Як видно, у нашому випадку вмістом є простий текст.</li>
            <li>Елемент: відкриваючий тег + закриваючий тег + вміст = елемент.</li>
        </ul>
        <h3>Вкладені елементи</h3>
        <p>Ви також можете вкладати елементи інших елементів – це називається вкладеністю. Якщо ми хочемо викликати, що наш кіт дуже сердитий, ми замінюємо слово "дуже" в елементі ${`<strong>`} , що означає, що це слово є надзвичайно важливим для підвищення кваліфікації:</p>
        <div className={styles['blockStyle']}>
        {`<p>Мой кіт <strong>дуже</strong> сердитий.</p>`}
        </div>
        <p>Ви маєте переконатися, що елементи вкладені належним чином: у наступному прикладі ми відкриваємо p елемент першим, потім елемент strong, потім ми закриваємо елемент strong першим, потім p. Наступне писати неправильно:</p>
        <div className={styles['falseBlockStyle']}>{`<p>Мой кот <strong>очень сердитый.</p></strong>`}</div>
        <p>Елементи повинні відкриватися і закриватися правильно таким чином, щоб явно перебувати всередині або зовні один одного. Якщо вони перекриваються так, як у прикладі вище, то ваш браузер спробує "додумати" за вас, що ви мали на увазі, і ви отримаєте непередбачуваний результат. Тож не робіть так!</p>
        <h3>Блокові та рядкові елементи</h3>
        <p>Існує дві важливих категорії елементів у HTML, які вам варто знати - елементи блочного рівня та рядкові елементи.</p>
        <ul className={styles['course-list']}   >
            <li>Елементи блокового рівня формують видимий блок на сторінці - вони опиняться на новому рядку після будь-якого контенту, що йшов до них, і будь-який контент після них також опиниться на новому рядку. Найчастіше елементами блочного рівня бувають структурні елементи сторінки, що являють собою, наприклад, параграфи (абзаци), списки, меню навігації, футери, або підвали, тощо. Елементи блочного рівня не вкладаються в рядкові елементи, але іноді можуть вкладатися в інші елементи блочного рівня.</li>
            <li>{`Рядкові елементи — це ті, що містяться в елементах блочного рівня та оточують лише малі частини вмісту документа, не цілі абзаци та угруповання контенту. Рядкові елементи не призводять до появи нового рядка в документі: вони зазвичай зустрічаються всередині абзацу тексту, наприклад, елемент <a> (посилання) або елементи, що акцентують на кшталт <em> або <strong>.`}</li>
        </ul>
        <p>Подивіться на наступний приклад:</p>
        <div className={styles['blockStyle']}>
        {`<em>Перший</em><em>другий</em><em>третій</em>`}<br/>
        {`<p>четвертий</p><p>п'ятий</p><p>шостий</p>`}
        </div>
        <p>
        {`<em> - це малий елемент, так що, як ви тут бачите, перші три елементи знаходяться на одному рядку один з одним без пробілів між ними. З іншого боку, <p> — це елемент блокового рівня, тому кожен елемент знаходиться на новому рядку, з простором вище і нижче кожного (цей інтервал визначається CSS-оформленням за умовчанням, яке браузери застосовують до абзаців).`}
        </p>
        <div className={styles['course-example']}>Першийдругийтретій<br/><br/>
        четвертий
            <br/>
            <br/>
            п'ятий
            <br/>
            <br/>
            шостий
            <br/>
        </div>
        <div className={styles['notes']}><span className={styles['fw700']}>Примітка:</span> Не плутайте терміни "блоковий" і "рядковий", що використовуються в цьому розділі, з однойменними типами відображення в CSS. Хоча за замовчуванням вони корелюють, зміна типу відображення в CSS не змінює категорію елемента і не впливає на те, у що його можна вкладати і що можна вкладати в нього. Ця досить часта плутанина - одна з причин, чому HTML5 відмовився від цих термінів.</div>
        <h3>Порожні елементи</h3>
        <p>Не всі елементи відповідають вищезгаданому шаблону: тег, що відкриває, контент, що закриває тег. Деякі елементи складаються з одного тега і зазвичай використовуються для вставки чогось у місце документа, де розміщені. Наприклад, елемент {`<img>`} вставляє картинку на сторінку в тому самому місці, де він розташований:</p>
        <div className={styles['blockStyle']}>{`<img src="https://raw.githubusercontent.com/mdn/beginner-html-site/gh-pages/images/firefox-icon.png">`}</div>
        <p>Це виведе на вашу сторінку таке:</p>
        <div className={styles['course-example']}>
            <img src='/img/firefox-icon.png'></img>
        </div>
        <div className={styles['notes']}><span className={styles['fw700']}>Примітка:</span> 
Порожні елементи іноді називають void-елементами.</div>
    </section>
  )
}

export default WhatIsHtml;